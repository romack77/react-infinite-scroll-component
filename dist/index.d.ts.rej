diff a/dist/index.d.ts b/dist/index.d.ts	(rejected hunks)
@@ -4,22 +4,22 @@ export interface Props {
-    next: Fn;
-    hasMore: boolean;
-    children: ReactNode;
-    loader: ReactNode;
-    scrollThreshold?: number | string;
-    endMessage?: ReactNode;
-    style?: CSSProperties;
-    outerDivStyle?: CSSProperties;
-    height?: number | string;
-    scrollableTarget?: ReactNode;
-    hasChildren?: boolean;
-    pullDownToRefresh?: boolean;
-    pullDownToRefreshContent?: ReactNode;
-    releaseToRefreshContent?: ReactNode;
-    pullDownToRefreshThreshold?: number;
-    refreshFunction?: Fn;
-    onScroll?: (e: MouseEvent) => any;
-    dataLength: number;
-    initialScrollY?: number;
-    key?: string;
-    className?: string;
-    outerDivClassName?: string;
+  next: Fn;
+  hasMore: boolean;
+  children: ReactNode;
+  loader: ReactNode;
+  scrollThreshold?: number | string;
+  endMessage?: ReactNode;
+  style?: CSSProperties;
+  outerDivStyle?: CSSProperties;
+  height?: number | string;
+  scrollableTarget?: ReactNode;
+  hasChildren?: boolean;
+  pullDownToRefresh?: boolean;
+  pullDownToRefreshContent?: ReactNode;
+  releaseToRefreshContent?: ReactNode;
+  pullDownToRefreshThreshold?: number;
+  refreshFunction?: Fn;
+  onScroll?: (e: MouseEvent) => any;
+  dataLength: number;
+  initialScrollY?: number;
+  key?: string;
+  className?: string;
+  outerDivClassName?: string;
@@ -28,2 +28,2 @@ interface State {
-    showLoader: boolean;
-    pullToRefreshThresholdBreached: boolean;
+  showLoader: boolean;
+  pullToRefreshThresholdBreached: boolean;
@@ -32,22 +32,25 @@ export default class InfiniteScroll extends Component<Props, State> {
-    constructor(props: Props);
-    private throttledOnScrollListener;
-    private _scrollableNode;
-    private el;
-    private _infScroll;
-    private lastScrollTop;
-    private actionTriggered;
-    private _pullDown;
-    private startY;
-    private currentY;
-    private dragging;
-    private maxPullDownDistance;
-    componentDidMount(): void;
-    componentWillUnmount(): void;
-    UNSAFE_componentWillReceiveProps(props: Props): void;
-    getScrollableTarget: () => HTMLElement | null;
-    onStart: EventListener;
-    onMove: EventListener;
-    onEnd: EventListener;
-    isElementAtBottom(target: HTMLElement, scrollThreshold?: string | number): boolean;
-    onScrollListener: (event: MouseEvent) => void;
-    render(): JSX.Element;
+  constructor(props: Props);
+  private throttledOnScrollListener;
+  private _scrollableNode;
+  private el;
+  private _infScroll;
+  private lastScrollTop;
+  private actionTriggered;
+  private _pullDown;
+  private startY;
+  private currentY;
+  private dragging;
+  private maxPullDownDistance;
+  componentDidMount(): void;
+  componentWillUnmount(): void;
+  UNSAFE_componentWillReceiveProps(props: Props): void;
+  getScrollableTarget: () => HTMLElement | null;
+  onStart: EventListener;
+  onMove: EventListener;
+  onEnd: EventListener;
+  isElementAtBottom(
+    target: HTMLElement,
+    scrollThreshold?: string | number
+  ): boolean;
+  onScrollListener: (event: MouseEvent) => void;
+  render(): JSX.Element;
